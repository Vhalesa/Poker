To-Do-Liste

Karten:
  - Definition (Datentypen für Farbe, Wert, Karte -> Show, Eq, Ord + evtl Enum, Bounded) [done]
  - Deck (mit allen Karten) [done]
  - Stapel -> Mischfunktion für das Deck []

Chips:
  - Datentyp (Show, Ord, Eq) [done]
  - Chipshaufen für jeden Spieler für den Anfang [done]
  - Summe der Chips bilden [done]
  - Wechselfunktion: []
    - reines Wechseln ist fertig [done]
    - Austauschen des Chips (der aus dem Besitz gewechselt wird) mit den gewechselten Chips 
      -> eigenen Chipshaufen aktualisieren []

Regeln:
  - Tabelle mit den Gewinnmöglichkeiten []
  - Big Blind, Small Blind

Spielablauf:
  - 4 Wettrunden
  - Showdown

KI:

Text-Ausgabe:
  - Kartensymbole wenn möglich in bunt (rot/schwarz) []

Allgemeine Anforderungen:
- mind. 2 (oder 3) Themen aus der Vorlesung verwenden
  - z.B. Parallelität, Nebenläufigkeit, (Lazyness?) bei der KI
  - evtl. GUI

- für Präsentation:
  - welche Techniken aus der Vorlesung wurden wo angewendet?
  - welche interessanten Probleme traten auf? - wie wurden sie gelöst?
  - welche Bibliotheken/Codevorlagen wurden genutzt?

- Probleme:
  - randomFunktion: Funktionen sollten ohne IO funktionieren, allerdings
    muss mind. 1 Zufallszahl über IO erzeugt werden. Diese würde dann
    alles vom Type IO machen -> doof
    Lösung: StdGenerator wird über diese eine IO-RandomZahl erzeugt,
            dieser kann dann Int-Zufallszahlen erzeugen (ohne IO)
